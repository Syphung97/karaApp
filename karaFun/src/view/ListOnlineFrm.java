/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableCellRenderer;
import libs.JTableButtonMouseListener;
import libs.JTableButtonRenderer;
import model.Account;
import model.Room;
import model.User;

/**
 *
 * @author Tran Tuan Anh
 */
public class ListOnlineFrm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ListOnlineFrm
     */
    private ArrayList<User> listUser;
    private ArrayList<JButton> listInviteBtn;
    public ListOnlineFrm() {
        initComponents();
        
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        listUser = new ArrayList<>();
        listInviteBtn = new ArrayList<>();

        //ADD LIST USER...
        User user1 = new User(true, "ta", "hn", new Date(20), new Account("a","b"));
        User user2 = new User(true, "ta", "hn", new Date(20), new Account("a","b"));
        User user3 = new User(true, "ta", "hn", new Date(20), new Account("a","b"));
        
        listUser.add(user1);
        listUser.add(user2);
        listUser.add(user3);
        //////////

        for (int i = 0; i < listUser.size(); i++) {
            JButton btnJoin = new JButton("Invite");
            btnJoin.addActionListener(this);
            listInviteBtn.add(btnJoin);
        }

        jTable1.setModel(new OnlineTableModel());
        TableCellRenderer buttonRenderer = new JTableButtonRenderer();
        jTable1.getColumn("Action").setCellRenderer(buttonRenderer);
        jTable1.addMouseListener(new JTableButtonMouseListener(jTable1));
        jTable1.setRowHeight(25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ONLINE");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Action"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListOnlineFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListOnlineFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListOnlineFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListOnlineFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListOnlineFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        JButton btnClicked = (JButton) e.getSource();
        for (int i = 0; i < listInviteBtn.size(); i++) {
            if (btnClicked.equals(listInviteBtn.get(i))) {
                btnInviteClick(listUser.get(i));
                
            }
        }
    }
    
    public void btnInviteClick(User user){
        //SEND INVITE TO USER 
    }
    
    class OnlineTableModel extends AbstractTableModel {

        private String[] columnNames = {"Name", "Action"};
        private final Class<?>[] columnTypes = new Class<?>[]{String.class, JButton.class};

        @Override
        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public int getRowCount() {
            return listUser.size();
        }

        @Override
        public String getColumnName(int columnIndex) {
            return columnNames[columnIndex];
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return columnTypes[columnIndex];
        }

        @Override
        public Object getValueAt(final int rowIndex, final int columnIndex) {
            /*Adding components*/
            switch (columnIndex) {
                case 0:
                    return listUser.get(rowIndex).getName();
                case 1:
                    return listInviteBtn.get(rowIndex);

                default:
                    return "Error";
            }
        }
    }
}
