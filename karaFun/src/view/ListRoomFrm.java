/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import libs.JTableButtonMouseListener;
import libs.JTableButtonRenderer;
import libs.Table;
import model.Account;
import model.Room;
import model.Song;
import model.User;

/**
 *
 * @author Tran Tuan Anh
 */
public class ListRoomFrm extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form ListRoomFrm
     */
    private ArrayList<Room> listRoom;
    private ArrayList<JButton> listJoinBtn;

    public ListRoomFrm() {
        initComponents();

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        listRoom = new ArrayList<>();
        listJoinBtn = new ArrayList<>();

        ArrayList<User> listUser = new ArrayList<>();
        listUser.add(new User(true, "ta", "hn", new Date(20), new Account("a","b")));

        ArrayList<Song> listSong = new ArrayList<>();
        listSong.add(new Song(1, "a", "a", "a"));
        listSong.add(new Song(2, "b", "b", "b"));

        listRoom.add(new Room(1, listSong, listUser));
        listRoom.add(new Room(2, listSong, listUser));
        listRoom.add(new Room(3, listSong, listUser));

        for (int i = 0; i < listRoom.size(); i++) {
            JButton btnJoin = new JButton("Join");
            btnJoin.addActionListener(this);
            listJoinBtn.add(btnJoin);
        }

        jTable1.setModel(new RoomTableModel());
        TableCellRenderer buttonRenderer = new JTableButtonRenderer();
        jTable1.getColumn("Action").setCellRenderer(buttonRenderer);
        jTable1.addMouseListener(new JTableButtonMouseListener(jTable1));
        jTable1.setRowHeight(25);

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JButton btnClicked = (JButton) e.getSource();
        for (int i = 0; i < listJoinBtn.size(); i++) {
            if (btnClicked.equals(listJoinBtn.get(i))) {
                btnJoinClick(listRoom.get(i));
                
            }
        }
    }

    public void btnJoinClick(Room room) {
        System.out.println("clicked" + room.getID());
        (new RoomFrm(room)).setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Capacity", "Join"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("List Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListRoomFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    class RoomTableModel extends AbstractTableModel {

        private String[] columnNames = {"ID", "Capacity", "Action"};
        private final Class<?>[] columnTypes = new Class<?>[]{Integer.class, Integer.class, JButton.class};

        @Override
        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public int getRowCount() {
            return listRoom.size();
        }

        @Override
        public String getColumnName(int columnIndex) {
            return columnNames[columnIndex];
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return columnTypes[columnIndex];
        }

        @Override
        public Object getValueAt(final int rowIndex, final int columnIndex) {
            /*Adding components*/
            switch (columnIndex) {
                case 0:
                    return listRoom.get(rowIndex).getID();
                case 1:
                    return listRoom.get(rowIndex).getListUser().size();
                case 2:
                    return listJoinBtn.get(rowIndex);

                default:
                    return "Error";
            }
        }
    }
}
